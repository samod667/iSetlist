{"version":3,"sources":["Components/Submit/submit.module.css","Components/TuneField/tuneField.module.css","App.module.css","Components/TuneField/tune/tune.module.css","Components/Location/location.jsx","Components/TuneField/tune/tune.jsx","Components/TuneField/tuneField.jsx","Components/Output/output.jsx","Components/Submit/submit.jsx","App.js","serviceWorker.js","index.js","Components/Output/output.module.css","Components/Location/location.module.css"],"names":["module","exports","location","props","className","classes","Location","Title","title","Example","example","onChange","change","Input","type","inputType","value","placeholder","tune","tuneField","numOfTunes","tunes","Container","style","width","height","padding","fontSize","margin","options","label","map","i","key","e","inputHandler","output","this","date","console","log","Output","Date","format","List","ListItem","Component","Submit","trigger","Button","content","componentRef","onClick","reset","ref","el","React","App","state","textFields","handleTextInput","event","input","target","setState","handleDateInput","handleNumOfTunes","Array","handleInputChange","textInputs","handleSubmit","handleReset","submit","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fcad7719.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"submit_Container__2Xoe_\",\"Button\":\"submit_Button__2UrSf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"tuneField_Container__1s7VV\",\"Title\":\"tuneField_Title__LFE_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"tune_Input__3OR8h\"};","import React from 'react'\n\nimport classes from './location.module.css'\n\nexport default function location(props) {\n    return (\n        <div className={classes.Location}>\n        <h1 className={classes.Title}>{props.title}</h1>\n        <p className={classes.Example}>{props.example}</p>\n            <input onChange={props.change} className={classes.Input} type={props.inputType} value={props.value} placeholder={props.placeholder}/>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport classes from './tune.module.css'\n\nexport default function tune(props) {\n    return <input className={classes.Input} value={props.value} type=\"text\" onChange={props.change}></input>\n    \n}\n","import React from 'react'\nimport Select from 'react-dropdown-select'\nimport Tune from './tune/tune'\n\nimport classes from './tuneField.module.css'\n\nexport default function tuneField(props) {\n    \n    const options = [\n      { value: 1, label: 1 },\n      { value: 2, label: 2 },\n      { value: 3, label: 3 },\n      { value: 4, label: 4 },\n      { value: 5, label: 5 },\n      { value: 6, label: 6 },\n      { value: 7, label: 7 },\n      { value: 8, label: 8 },\n      { value: 9, label: 9 },\n      { value: 10, label: 10 },\n      { value: 11, label: 11 }, \n      { value: 12, label: 12 },\n      { value: 13, label: 13 },\n      { value: 14, label: 14 },\n      { value: 15, label: 15 },\n    ];\n\n    const style = {\n        width: '400px',\n        height: '30px',\n        padding: '5px',\n        fontSize: '20px',\n        margin: '20px 150px'\n    }\n\n    const { title, change, placeholder, numOfTunes, tunes } = props\n\n    return (\n      <div className={classes.Container}>\n        <h1 className={classes.Title}>{title}</h1>\n        <Select style={style} options={options} onChange={change} value={numOfTunes} placeholder={placeholder}/>\n        \n        {numOfTunes > 0 ? <h3>Tune list:</h3> : null}\n        {\n            tunes.map((tune, i) => {\n                return <div key={i}>{i + 1}. <Tune key={i} value={tunes[i]} change={e => props.inputHandler(e, i)}/></div>;\n            })\n        }\n      </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport Moment from 'react-moment'\n\nimport classes from \"./output.module.css\";\n\nclass output extends Component {\n  render(props) {\n    const { location, date, tunes, numOfTunes } = this.props;\n    console.log(tunes)\n   return (\n     <div className={classes.Output}>\n       <h1 className={classes.Title}>{location}</h1>\n       {date !== \"\" ? (\n         <h3 className={classes.Date}>\n           <Moment format=\"DD/MM/YYYY\">{date}</Moment>\n         </h3>\n       ) : null}\n\n       <ol className={classes.List}>\n         {tunes.map((tune) => (\n           <li className={classes.ListItem}>{tune}</li>\n         ))}\n       </ol>\n     </div>\n   );\n  }\n}\n\nexport default output;\n","import React from \"react\";\nimport ReactToPrint from \"react-to-print\";\n\nimport Output from \"../Output/output\";\n\nimport classes from \"./submit.module.css\";\n\nclass Submit extends React.Component {\n\n  render() {\n    return (\n      <div className={classes.Container}>\n        {/*<button className={classes.Button} type=\"button\">\n          Generate\n    </button>*/}\n        <div>\n          <ReactToPrint\n            trigger={() => (\n              <button type=\"button\" className={classes.Button}>\n                Print iSetList\n              </button>\n            )}\n            content={() => this.componentRef}\n          />\n          <button\n            className={classes.Button}\n            onClick={this.props.reset}\n            type=\"button\"\n          >\n            Reset\n          </button>\n        </div>\n        {this.props.numOfTunes > 0 ? <Output\n          ref={(el) => (this.componentRef = el)}\n          location={this.props.location}\n          date={this.props.date}\n          tunes={this.props.tunes}\n        /> : null}\n        \n      </div>\n    );\n  }\n}\n\nexport default Submit;\n","import React, { Component } from \"react\";\n\nimport classes from \"./App.module.css\";\n\nimport Location from \"./Components/Location/location\";\nimport TuneField from \"./Components/TuneField/tuneField\";\nimport Submit from \"./Components/Submit/submit\";\n\nclass App extends Component {\n  state = {\n    location: \"\",\n    date: \"\",\n    numOfTunes: 0,\n    textFields: [],\n  };\n\n  handleTextInput = (event) => {\n    const input = event.target.value;\n\n    this.setState({ location: input });\n  };\n\n  handleDateInput = (event) => {\n    this.setState({\n      date: event.target.value,\n    });\n  };\n\n  handleNumOfTunes = (value) => {\n    this.setState({\n      numOfTunes: value[0].value,\n      textFields: [...Array(value[0].value)],\n    });\n  };\n\n  handleInputChange = (e, i) => {\n    const textInputs = [...this.state.textFields];\n    const input = e.target.value;\n    textInputs[i] = input;\n\n    this.setState({\n      textFields: textInputs,\n    });\n    // console.log(textInputs)\n  };\n\n  handleSubmit = () => {};\n\n  handleReset = () => {\n    this.setState({\n      location: \"\",\n      date: \"\",\n      numOfTunes: 0,\n      textFields: [],\n    });\n\n    // console.log(this.state);\n  };\n\n  render() {\n    const { location, date, textFields, numOfTunes } = this.state;\n\n    return (\n      <div className={classes.App}>\n        <Location\n          change={this.handleTextInput}\n          title={\"Where?\"}\n          example={\"\"}\n          inputType={\"text\"}\n          placeholder={\"Describe here...\"}\n          value={location}\n        />\n        <Location\n          change={this.handleDateInput}\n          title={\"When?\"}\n          inputType={\"date\"}\n          value={date}\n        />\n        <TuneField\n          title={\"How many tunes do you play?\"}\n          change={this.handleNumOfTunes}\n          placeholder={\"Tunes number...\"}\n          inputHandler={this.handleInputChange}\n          tunes={textFields}\n          numOfTunes={numOfTunes}\n        />\n        <Submit\n          reset={this.handleReset}\n          submit={this.handleSubmit}\n          location={location}\n          date={date}\n          tunes={textFields}\n          numOfTunes={numOfTunes}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Output\":\"output_Output__18_6-\",\"Title\":\"output_Title__DRtGv\",\"Date\":\"output_Date__2nrjh\",\"List\":\"output_List__3RMud\",\"ListItem\":\"output_ListItem__3VBrB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Location\":\"location_Location__3Yu8o\",\"Input\":\"location_Input__3OGm1\",\"Example\":\"location_Example__12lOq\",\"Title\":\"location_Title__1A3Ri\"};"],"sourceRoot":""}